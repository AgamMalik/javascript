1. getElementbyId ==> querySelector()

2. push, pop work at the end of the string/array

3. shift, unshift work at the beginning of the array

4. .value()=""  ====> clear the input

5. sort() ====> sorts array in alphabatical order.........whereas to sort array numberwise... pass compare function as parameter in sort function.
                it modifies original array.

6. splice() ===> to add new item in  the array at any position.
                it modifies original array.

7. slice() ====> slice out  elements from an array.
                it creates new array.

8. map() ====> same as for each/for ........ 
                it creates a new array.

9. rest ==> during function declaration
   spread ==> durung function invoke

10. || ==> for default value(return the truthy)


    && ==> for dynamic return(return the falsy)
          {condition && <ConditionalComponent />}
       <>if condition is a truthy value, <ConditionalComponent /> is rendered
       <>if condition is a falsy value, <ConditionalComponent /> is not rendered

11. Use a Set when your dataset needs to be composed of unique values. Set  is a special type          collection – “set of values” (without keys), where each value may occur only once.
    you can't access elements by index,
    Use a Map when you have pairs of associated data. You map the keys to the values.
    Some of the features of maps are that the order is guaranteed, and values can be duplicated (but keys can't)




12. dont use let/const/var and any returntype to define a property/function in a class(unlike typescript where return type is needed)..because it will be decided by js at runtime.
	-but we can use them to define a variable in a class..
	as the main aim of defining a variable in a class is to store some local values for that class...
	(but it doesnt mean that we can use that local variable outside the scope of class...we can use it..if we need..)